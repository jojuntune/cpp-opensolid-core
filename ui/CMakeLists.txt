######### Find required libraries ##########

    # Qt
    find_package(Qt4 REQUIRED)
    set(QT_USE_QTOPENGL ON)
    set(QT_USE_QTXML ON)
    include(${QT_USE_FILE})
    include_directories(${QT_INCLUDE_DIR})
    add_definitions(${QT_DEFINITIONS})
    
    # OpenGL
    find_package(OpenGL REQUIRED)
    include_directories(${OPENGL_INCLUDE_DIR})
    # Most POSIX systems have OpenGL headers in GL/ subdirectory
    include_directories(${OPENGL_INCLUDE_DIR}/GL)
    # Mac OS X has OpenGL headers in Headers/ subdirectory of framework directory
    include_directories(${OPENGL_INCLUDE_DIR}/Headers)
    
######### Build graph (and STK) libraries ##########

    add_subdirectory(graph)
    
######### Perform Qt preprocessing ##########

    # Generate resource .cpp file
    qt4_add_resources(IMAGES_RESOURCE res/images.qrc)

    # Collect .ui files
    set(UI_INTERFACE_FILES dlgPointDetails.ui mainWindow.ui)

    # Generate ui_XXX.h headers from .ui files
    qt4_wrap_ui(UI_INTERFACE_HEADERS ${UI_INTERFACE_FILES})

    # Collect headers to be passed to moc
    set(UI_MOC_HEADERS
        dlgPointDetails.h
        graphItemModel.h
        mainWindow.h
        modelView.h
        nodePropItemModel.h
        treeWidget.h
    )
    
    # Use moc to generate source files from headers
    qt4_wrap_cpp(UI_MOC_SOURCES ${UI_MOC_HEADERS})

    # Include build directory so ui_XXX.h headers (generated from the .ui files)
    # can be found, and the current directory so generated headers can find headers
    # in the current directory
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} .)

########## Build UI library ##########

    set(UI_SOURCES
        camera.cpp
        cameraModelView.cpp
        cameraFirstPerson.cpp
        dlgPointDetails.cpp
        graphItemModel.cpp
        mainWindow.cpp
        modelView.cpp
        nodePropItemModel.cpp
        renderTarget.cpp
        treeWidget.cpp
        projectRenderTarget.cpp
    )
    
    add_library(opensolid_ui
        ${UI_INTERFACE_HEADERS}
        ${UI_SOURCES}
        ${UI_MOC_SOURCES}
        ${IMAGES_RESOURCE}
    )
    
    set_target_properties(opensolid_ui PROPERTIES DEBUG_POSTFIX "_debug")
    
    add_to_global_source_list(
        ${UI_MOC_HEADERS}
        ${UI_SOURCES}
        ${STK_SOURCES}
        CMakeLists.txt
        PARENT_SCOPE
    )
    
    target_link_libraries(OpenSolidUI ${QT_LIBRARIES} ${OPENGL_LIBRARIES})

########## Compile OpenSolid application ##########

    add_executable(opensolid opensolid.cpp)
    
    target_link_libraries(opensolid
        ${QT_LIBRARIES}
        ${OPENGL_LIBRARIES}
        opensolid_ui
        opensolid_graph
        opensolid_stk
    )
    
